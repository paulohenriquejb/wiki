{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo.barroz\\\\Documents\\\\projetos_react\\\\projeto1\\\\desafio1\\\\src\\\\pages\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Container } from './styles';\nimport Input from '../components/Input';\nimport gitlogo from '../assets/gitx.png';\nimport ItemRepo from '../components/itemRepo';\nimport Button from '../components/button';\nimport { useState } from 'react';\nimport { api } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentRepo, setCurrentRepo] = useState('');\n  const [repos, setRepos] = useState([]);\n  const handlePesquisar = async () => {\n    try {\n      const {\n        data\n      } = await api.get(`repos/${currentRepo}`);\n      if (data.id) {\n        setRepos(prev => [...prev, data]);\n      }\n    } catch (error) {\n      console.error('Erro ao buscar repositório:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: gitlogo,\n      width: 72,\n      height: 72,\n      alt: \"icone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: currentRepo,\n      onChange: e => setCurrentRepo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handlePesquisar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), repos.map(repo => /*#__PURE__*/_jsxDEV(ItemRepo, {\n      repo: repo\n    }, repo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"d2AXQlBZ1/O4f0jv3lmLX0ZILgY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","Input","gitlogo","ItemRepo","Button","useState","api","jsxDEV","_jsxDEV","App","_s","currentRepo","setCurrentRepo","repos","setRepos","handlePesquisar","data","get","id","prev","error","console","children","src","width","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","map","repo","_c","$RefreshReg$"],"sources":["C:/Users/paulo.barroz/Documents/projetos_react/projeto1/desafio1/src/pages/App.js"],"sourcesContent":["import { Container } from './styles';\nimport Input from '../components/Input';\nimport gitlogo from '../assets/gitx.png';\nimport ItemRepo from '../components/itemRepo';\nimport Button from '../components/button';\nimport { useState } from 'react';\nimport { api } from \"../services/api\";\n\nfunction App() {\n  const [currentRepo, setCurrentRepo] = useState('');\n  const [repos, setRepos] = useState([]);\n\n  const handlePesquisar = async () => {\n    try {\n      const { data } = await api.get(`repos/${currentRepo}`);\n\n      if (data.id) {\n        setRepos(prev => [...prev, data]);\n      }\n    } catch (error) {\n      console.error('Erro ao buscar repositório:', error);\n    }\n  };\n\n  return (\n    <Container>\n      <img src={gitlogo} width={72} height={72} alt='icone' />\n      <Input value={currentRepo} onChange={(e) => setCurrentRepo(e.target.value)} />\n      <Button onClick={handlePesquisar} />\n      {repos.map(repo => <ItemRepo key={repo.id} repo={repo} />)}\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,UAAU;AACpC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAE,SAAQN,WAAY,EAAC,CAAC;MAEtD,IAAIK,IAAI,CAACE,EAAE,EAAE;QACXJ,QAAQ,CAACK,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEH,IAAI,CAAC,CAAC;MACnC;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,oBACEZ,OAAA,CAACR,SAAS;IAAAsB,QAAA,gBACRd,OAAA;MAAKe,GAAG,EAAErB,OAAQ;MAACsB,KAAK,EAAE,EAAG;MAACC,MAAM,EAAE,EAAG;MAACC,GAAG,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxDtB,OAAA,CAACP,KAAK;MAAC8B,KAAK,EAAEpB,WAAY;MAACqB,QAAQ,EAAGC,CAAC,IAAKrB,cAAc,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EtB,OAAA,CAACJ,MAAM;MAAC+B,OAAO,EAAEpB;IAAgB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnCjB,KAAK,CAACuB,GAAG,CAACC,IAAI,iBAAI7B,OAAA,CAACL,QAAQ;MAAekC,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACnB,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEhB;AAACpB,EAAA,CAxBQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}